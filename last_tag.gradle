ext {
    String lastTag = this.getLastTag()
    gitLastTag = lastTag
}

def String getLastTag() {
    // check if git project
    def status = 'git status'.execute([], rootDir)
    status.waitFor()
    def isGitProject = status.exitValue()

    if (isGitProject == 69) {
        println("git returned with error 69\n" +
                "If you are a mac user that message is telling you is that you need to open the " +
                "application XCode on your Mac OS X/macOS and since it hasn’t run since the last " +
                "update, you need to accept the new license EULA agreement that’s part of the " +
                "updated XCode.")
    }

    if (isGitProject > 0) {
        println("ERROR: can't generate a git version, this is not a git project")
        println(" -> Not a git repository (or any of the parent directories): .git")
        return null
    }

    println("Starting getting tag ...")
    def command;
    def proc;
    if (System.env['OS'] != null && System.env['OS'].contains('Windows')) {
        command = "cmd /c .\\get_last_tag.bat";
        proc = command.execute();
    } else {
        "chmod 0777 ./get_last_tag.sh".execute([], rootDir);
        command = "./get_last_tag.sh"
        proc = command.execute([], rootDir);
    }

    def outputStream = new StringBuffer()
    proc.waitForProcessOutput(outputStream, System.err)
    return outputStream.toString().trim()
}
